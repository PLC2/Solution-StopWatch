variables:
  GIT_SUBMODULE_STRATEGY: recursive
  GIT_SUBMODULE_UPDATE_FLAGS: --jobs 4

  # see https://docs.gitlab.com/runner/configuration/feature-flags.html
  FF_SCRIPT_SECTIONS: "true"

Vivado-Docker:
  image: ${CI_REGISTRY}/docker-images/vivado:latest
  tags:
    - DockerExecutor
  parallel:
    matrix:
      - DESIGN:         ["Encoder", "Display", "StopWatch"]
        VIVADO_VERSION: "2021.2"
  variables:
    PROJECT_NAME:   StopWatch
    TOP_NAME:       toplevel
    RUNS_NAME:      ${DESIGN}
  script:
    - |
      exec-Vivado.sh -d \
      --select-vivado=${VIVADO_VERSION} \
      --project-file=project/${PROJECT_NAME}.xpr \
      --simple-flow \
      --synth-name=synth_${DESIGN} \
      --impl-name=impl_${DESIGN} \
      --src-name=src_${DESIGN} \
      --constr-name=const_${DESIGN}
    ### Fail Pipeline if Timing is not met ###
    - |
      echo -e "${ANSI_CYAN}Timing summary evolution${ANSI_NOCOLOR}"
      grep 'Timing Summary' ./${PROJECT_NAME}/$PROJECT_NAME.runs/impl_$RUNS_NAME/$TOP_NAME.vdi | sed 's/^/  /'
      TimingFailed=$(grep -m 1 'Timing 38-282' ./${PROJECT_NAME}/$PROJECT_NAME.runs/impl_$RUNS_NAME/$TOP_NAME.vdi) \
        || echo -e "${ANSI_GREEN}[PASSED] Timing analysis.${ANSI_NOCOLOR}" \
        && (echo -e "${ANSI_RED}[FAILED] Timing analysis.\n${TimingFailed}${ANSI_NOCOLOR}"; exit 1)

  after_script:
    - |
      CopyFile ${PROJECT_NAME}/${PROJECT_NAME}.runs/synth_${RUNS_NAME}/${TOP_NAME}.vds .
      CopyFile ${PROJECT_NAME}/${PROJECT_NAME}.runs/synth_${RUNS_NAME}/${TOP_NAME}_utilization_synth.rpt .
      CopyFile ${PROJECT_NAME}/${PROJECT_NAME}.runs/impl_${RUNS_NAME}/${TOP_NAME}_utilization_placed.rpt .
      CopyFile ${PROJECT_NAME}/${PROJECT_NAME}.runs/impl_${RUNS_NAME}/${TOP_NAME}.vdi .
      CopyFile ${PROJECT_NAME}/${PROJECT_NAME}.runs/impl_${RUNS_NAME}/${TOP_NAME}_opt.dcp .
      CopyFile ${PROJECT_NAME}/${PROJECT_NAME}.runs/impl_${RUNS_NAME}/${TOP_NAME}_routed.dcp .
      CopyFile ${PROJECT_NAME}/${PROJECT_NAME}.runs/impl_${RUNS_NAME}/${TOP_NAME}.bit .
      CopyFile ${PROJECT_NAME}/${PROJECT_NAME}.runs/impl_${RUNS_NAME}/${TOP_NAME}.bin .
      CopyFile ${PROJECT_NAME}/${PROJECT_NAME}.runs/impl_${RUNS_NAME}/${TOP_NAME}.ltx .
      CopyFile --rename ${PROJECT_NAME}/${PROJECT_NAME}.runs/impl_${RUNS_NAME}/${TOP_NAME}.sysdef ${TOP_NAME}.hdf
      CopyFile --rename ${PROJECT_NAME}/${PROJECT_NAME}.runs/impl_${RUNS_NAME}/${TOP_NAME}.hwdef  ${TOP_NAME}_no_bitstream.hdf
  
  artifacts:
    name: "${CI_PROJECT_NAME}-${CI_COMMIT_SHORT_SHA}-${CI_PIPELINE_ID}"
    when: always
    paths:
      - "*.vds"
      - "*.rpt"
      - "*.vdi"
      - "*.bit"
      - "*.ltx"
      - "*.hdf"
      - "*_opt.dcp"
      - "*_routed.dcp"
      - "gen/*.csv"
    expire_in: 1 week
